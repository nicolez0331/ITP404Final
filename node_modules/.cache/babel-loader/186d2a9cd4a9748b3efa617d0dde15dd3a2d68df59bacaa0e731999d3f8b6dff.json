{"ast":null,"code":"var _jsxFileName = \"/Users/nicolez./Desktop/ITP404/final/src/pages/LogDetailsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport LogItem from \"../components/LogItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LogDetailsPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const logId = window.location.pathname.split(\"/\")[2]; // Extract logId from URL\n  const [log, setLog] = useState(null);\n  const [restaurants, setRestaurants] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [diningOptions, setDiningOptions] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newRecommendation, setNewRecommendation] = useState(\"\");\n  const [foodOrdered, setFoodOrdered] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [diningOption, setDiningOption] = useState([]);\n  const [comments, setComments] = useState([]); // Track comments\n  const [newComment, setNewComment] = useState(\"\"); // Comment input field\n\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const fetchDataExecuted = useRef(false);\n  const fetchData = () => {\n    if (fetchDataExecuted.current) return;\n    fetchDataExecuted.current = true;\n\n    // Fetch the log details\n    fetch(`http://localhost:5500/logs/${logId}`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(res => res.json()).then(data => {\n      setLog(data);\n      setFoodOrdered(data.foodOrdered);\n      setDate(data.date);\n      setRating(data.rating);\n      setDescription(data.description);\n      setDiningOption(data.diningOption || []);\n      setComments(data.comments || []); // Fetch comments for the log\n    }).catch(() => toast.error(\"Failed to load log details.\"));\n\n    // Fetch dining options, users, and restaurants\n    fetch(\"http://localhost:5500/diningOption\", {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(res => res.json()).then(data => setDiningOptions(data)).catch(() => toast.error(\"Failed to load dining options.\"));\n    fetch(\"http://localhost:5500/users\", {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(res => res.json()).then(data => setUsers(data)).catch(() => toast.error(\"Failed to load users.\"));\n    fetch(\"http://localhost:5500/restaurants\", {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(res => res.json()).then(data => setRestaurants(data)).catch(() => toast.error(\"Failed to load restaurants.\"));\n  };\n  if (!fetchDataExecuted.current) {\n    fetchData();\n  }\n  const getRestaurantName = restaurantId => {\n    const restaurant = restaurants.find(res => res.id === restaurantId);\n    return restaurant ? restaurant.name : \"Unknown Restaurant\";\n  };\n  React.useEffect(() => {\n    const restaurantTitle = log ? getRestaurantName(log.restaurantId) : \"Loading...\";\n    document.title = `${restaurantTitle} - Details`;\n  }, [log, restaurants]);\n  const handleSaveChanges = () => {\n    const updatedLog = {\n      restaurantId: log.restaurantId,\n      foodOrdered,\n      date,\n      rating,\n      description,\n      diningOption,\n      userId: log.userId,\n      recommend: log.recommend\n    };\n    fetch(`http://localhost:5500/logs/${logId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`\n      },\n      body: JSON.stringify(updatedLog)\n    }).then(res => {\n      if (!res.ok) {\n        toast.error(\"Failed to save changes.\");\n        return;\n      }\n      return res.json();\n    }).then(updatedLog => {\n      if (updatedLog) {\n        setLog(updatedLog);\n        setIsEditing(false);\n        toast.success(\"Changes saved successfully!\");\n      }\n    }).catch(() => toast.error(\"Failed to save changes.\"));\n  };\n  const handleUpdateRecommendation = () => {\n    if (newRecommendation === \"\") {\n      toast.error(\"Please select a recommendation.\");\n      return;\n    }\n    const updatedRecommendValue = newRecommendation === \"true\";\n    fetch(`http://localhost:5500/logs/${logId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        recommend: updatedRecommendValue\n      })\n    }).then(res => {\n      if (!res.ok) {\n        toast.error(\"Failed to update recommendation.\");\n      }\n      return res.json();\n    }).then(updatedLog => {\n      setLog(updatedLog);\n      setNewRecommendation(\"\");\n      toast.success(\"Recommendation updated successfully!\");\n    }).catch(() => toast.error(\"Failed to update recommendation.\"));\n  };\n  const handleAddComment = () => {\n    if (!newComment) {\n      toast.error(\"Please enter a comment.\");\n      return;\n    }\n    fetch(`http://localhost:5500/logs/${logId}/comments`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        text: newComment\n      })\n    }).then(res => res.json()).then(newCommentData => {\n      setComments([...comments, newCommentData]);\n      setNewComment(\"\"); // Clear comment input field\n      toast.success(\"Comment added!\");\n    }).catch(() => toast.error(\"Failed to add comment.\"));\n  };\n  const handleDeleteComment = commentId => {\n    fetch(`http://localhost:5500/logs/${logId}/comments/${commentId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(res => {\n      if (!res.ok) {\n        toast.error(\"Failed to delete comment.\");\n        return;\n      }\n      setComments(comments.filter(comment => comment.id !== commentId));\n      toast.success(\"Comment deleted.\");\n    }).catch(() => toast.error(\"Failed to delete comment.\"));\n  };\n  if (!log) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading log details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isEditing ? \"Edit Log\" : \"Log Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Restaurant:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), \" \", getRestaurantName(log.restaurantId)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Food Ordered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: foodOrdered,\n          onChange: e => setFoodOrdered(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: rating,\n          onChange: e => setRating(e.target.value),\n          className: \"form-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), [1, 2, 3, 4, 5].map(rating => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: rating,\n            children: rating\n          }, rating, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dining Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: diningOptions.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"me-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: option.id,\n              checked: diningOption.indexOf(option.id) !== -1,\n              onChange: () => {\n                const updatedDiningOption = [...diningOption];\n                if (updatedDiningOption.includes(option.id)) {\n                  updatedDiningOption.splice(updatedDiningOption.indexOf(option.id), 1);\n                } else {\n                  updatedDiningOption.push(option.id);\n                }\n                setDiningOption(updatedDiningOption);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this), option.name]\n          }, option.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleSaveChanges,\n        type: \"button\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Food Ordered:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), \" \", log.foodOrdered]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), \" \", log.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Rating:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), \" \", log.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), \" \", log.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Dining Options:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), \" \", log.diningOption.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleDeleteComment(comment.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add a comment...\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: handleAddComment,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => setIsEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: () => {\n        if (window.confirm(\"Are you sure you want to delete this log?\")) {\n          fetch(`http://localhost:5500/logs/${logId}`, {\n            method: \"DELETE\",\n            headers: {\n              Authorization: `Bearer ${apiKey}`\n            }\n          }).then(res => {\n            if (!res.ok) {\n              toast.error(\"Failed to delete log.\");\n              return;\n            }\n            toast.success(\"Log deleted successfully.\");\n            navigate(\"/logs\");\n          }).catch(() => toast.error(\"Failed to delete log.\"));\n        }\n      },\n      children: \"Delete Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(LogDetailsPage, \"cjMU/O/rjZHjapvCiJBhtjYZJ+g=\", false, function () {\n  return [useNavigate];\n});\n_c = LogDetailsPage;\nexport default LogDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"LogDetailsPage\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","toast","LogItem","jsxDEV","_jsxDEV","Fragment","_Fragment","LogDetailsPage","_s","navigate","logId","window","location","pathname","split","log","setLog","restaurants","setRestaurants","users","setUsers","diningOptions","setDiningOptions","isEditing","setIsEditing","newRecommendation","setNewRecommendation","foodOrdered","setFoodOrdered","date","setDate","rating","setRating","description","setDescription","diningOption","setDiningOption","comments","setComments","newComment","setNewComment","apiKey","process","env","REACT_APP_API_KEY","fetchDataExecuted","fetchData","current","fetch","headers","Authorization","then","res","json","data","catch","error","getRestaurantName","restaurantId","restaurant","find","id","name","useEffect","restaurantTitle","document","title","handleSaveChanges","updatedLog","userId","recommend","method","body","JSON","stringify","ok","success","handleUpdateRecommendation","updatedRecommendValue","handleAddComment","text","newCommentData","handleDeleteComment","commentId","filter","comment","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","map","option","checked","indexOf","updatedDiningOption","includes","splice","push","onClick","join","placeholder","confirm","_c","$RefreshReg$"],"sources":["/Users/nicolez./Desktop/ITP404/final/src/pages/LogDetailsPage.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport LogItem from \"../components/LogItem\";\n\nconst LogDetailsPage = () => {\n  const navigate = useNavigate();\n  const logId = window.location.pathname.split(\"/\")[2]; // Extract logId from URL\n  const [log, setLog] = useState(null);\n  const [restaurants, setRestaurants] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [diningOptions, setDiningOptions] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newRecommendation, setNewRecommendation] = useState(\"\");\n  const [foodOrdered, setFoodOrdered] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [diningOption, setDiningOption] = useState([]);\n\n  const [comments, setComments] = useState([]); // Track comments\n  const [newComment, setNewComment] = useState(\"\"); // Comment input field\n\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  const fetchDataExecuted = useRef(false);\n\n  const fetchData = () => {\n    if (fetchDataExecuted.current) return;\n    fetchDataExecuted.current = true;\n\n    // Fetch the log details\n    fetch(`http://localhost:5500/logs/${logId}`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLog(data);\n        setFoodOrdered(data.foodOrdered);\n        setDate(data.date);\n        setRating(data.rating);\n        setDescription(data.description);\n        setDiningOption(data.diningOption || []);\n        setComments(data.comments || []); // Fetch comments for the log\n      })\n      .catch(() => toast.error(\"Failed to load log details.\"));\n\n    // Fetch dining options, users, and restaurants\n    fetch(\"http://localhost:5500/diningOption\", {\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => setDiningOptions(data))\n      .catch(() => toast.error(\"Failed to load dining options.\"));\n\n    fetch(\"http://localhost:5500/users\", {\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => setUsers(data))\n      .catch(() => toast.error(\"Failed to load users.\"));\n\n    fetch(\"http://localhost:5500/restaurants\", {\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => setRestaurants(data))\n      .catch(() => toast.error(\"Failed to load restaurants.\"));\n  };\n\n  if (!fetchDataExecuted.current) {\n    fetchData();\n  }\n\n  const getRestaurantName = (restaurantId) => {\n    const restaurant = restaurants.find((res) => res.id === restaurantId);\n    return restaurant ? restaurant.name : \"Unknown Restaurant\";\n  };\n\n  React.useEffect(() => {\n    const restaurantTitle = log\n      ? getRestaurantName(log.restaurantId)\n      : \"Loading...\";\n    document.title = `${restaurantTitle} - Details`;\n  }, [log, restaurants]);\n\n  const handleSaveChanges = () => {\n    const updatedLog = {\n      restaurantId: log.restaurantId,\n      foodOrdered,\n      date,\n      rating,\n      description,\n      diningOption,\n      userId: log.userId,\n      recommend: log.recommend,\n    };\n\n    fetch(`http://localhost:5500/logs/${logId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`,\n      },\n      body: JSON.stringify(updatedLog),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          toast.error(\"Failed to save changes.\");\n          return;\n        }\n        return res.json();\n      })\n      .then((updatedLog) => {\n        if (updatedLog) {\n          setLog(updatedLog);\n          setIsEditing(false);\n          toast.success(\"Changes saved successfully!\");\n        }\n      })\n      .catch(() => toast.error(\"Failed to save changes.\"));\n  };\n\n  const handleUpdateRecommendation = () => {\n    if (newRecommendation === \"\") {\n      toast.error(\"Please select a recommendation.\");\n      return;\n    }\n\n    const updatedRecommendValue = newRecommendation === \"true\";\n\n    fetch(`http://localhost:5500/logs/${logId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`,\n      },\n      body: JSON.stringify({ recommend: updatedRecommendValue }),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          toast.error(\"Failed to update recommendation.\");\n        }\n        return res.json();\n      })\n      .then((updatedLog) => {\n        setLog(updatedLog);\n        setNewRecommendation(\"\");\n        toast.success(\"Recommendation updated successfully!\");\n      })\n      .catch(() => toast.error(\"Failed to update recommendation.\"));\n  };\n\n  const handleAddComment = () => {\n    if (!newComment) {\n      toast.error(\"Please enter a comment.\");\n      return;\n    }\n\n    fetch(`http://localhost:5500/logs/${logId}/comments`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`,\n      },\n      body: JSON.stringify({ text: newComment }),\n    })\n      .then((res) => res.json())\n      .then((newCommentData) => {\n        setComments([...comments, newCommentData]);\n        setNewComment(\"\"); // Clear comment input field\n        toast.success(\"Comment added!\");\n      })\n      .catch(() => toast.error(\"Failed to add comment.\"));\n  };\n\n  const handleDeleteComment = (commentId) => {\n    fetch(`http://localhost:5500/logs/${logId}/comments/${commentId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n      },\n    })\n      .then((res) => {\n        if (!res.ok) {\n          toast.error(\"Failed to delete comment.\");\n          return;\n        }\n        setComments(comments.filter((comment) => comment.id !== commentId));\n        toast.success(\"Comment deleted.\");\n      })\n      .catch(() => toast.error(\"Failed to delete comment.\"));\n  };\n\n  if (!log) return <p>Loading log details...</p>;\n\n  return (\n    <div className=\"container\">\n      <h1>{isEditing ? \"Edit Log\" : \"Log Details\"}</h1>\n      {isEditing ? (\n        <form>\n          <p>\n            <strong>Restaurant:</strong> {getRestaurantName(log.restaurantId)}\n          </p>\n\n          <div className=\"mb-3\">\n            <label>Food Ordered</label>\n            <input\n              type=\"text\"\n              value={foodOrdered}\n              onChange={(e) => setFoodOrdered(e.target.value)}\n              className=\"form-control\"\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <label>Date</label>\n            <input\n              type=\"date\"\n              value={date}\n              onChange={(e) => setDate(e.target.value)}\n              className=\"form-control\"\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <label>Rating</label>\n            <select\n              value={rating}\n              onChange={(e) => setRating(e.target.value)}\n              className=\"form-select\"\n            >\n              <option value=\"\">Select Rating</option>\n              {[1, 2, 3, 4, 5].map((rating) => (\n                <option key={rating} value={rating}>\n                  {rating}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"mb-3\">\n            <label>Description</label>\n            <textarea\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              className=\"form-control\"\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <label>Dining Option</label>\n            <div>\n              {diningOptions.map((option) => (\n                <label key={option.id} className=\"me-3\">\n                  <input\n                    type=\"checkbox\"\n                    value={option.id}\n                    checked={diningOption.indexOf(option.id) !== -1}\n                    onChange={() => {\n                      const updatedDiningOption = [...diningOption];\n                      if (updatedDiningOption.includes(option.id)) {\n                        updatedDiningOption.splice(\n                          updatedDiningOption.indexOf(option.id),\n                          1\n                        );\n                      } else {\n                        updatedDiningOption.push(option.id);\n                      }\n                      setDiningOption(updatedDiningOption);\n                    }}\n                  />\n                  {option.name}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <button\n            className=\"btn btn-primary\"\n            onClick={handleSaveChanges}\n            type=\"button\"\n          >\n            Save Changes\n          </button>\n        </form>\n      ) : (\n        <>\n          <p>\n            <strong>Food Ordered:</strong> {log.foodOrdered}\n          </p>\n          <p>\n            <strong>Date:</strong> {log.date}\n          </p>\n          <p>\n            <strong>Rating:</strong> {log.rating}\n          </p>\n          <p>\n            <strong>Description:</strong> {log.description}\n          </p>\n          <p>\n            <strong>Dining Options:</strong> {log.diningOption.join(\", \")}\n          </p>\n\n          <h3>Comments</h3>\n          <ul>\n            {comments.map((comment) => (\n              <li key={comment.id}>\n                <p>{comment.text}</p>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => handleDeleteComment(comment.id)}\n                >\n                  Delete\n                </button>\n              </li>\n            ))}\n          </ul>\n\n          <textarea\n            value={newComment}\n            onChange={(e) => setNewComment(e.target.value)}\n            placeholder=\"Add a comment...\"\n            className=\"form-control\"\n          />\n          <button className=\"btn btn-success\" onClick={handleAddComment}>\n            Add Comment\n          </button>\n\n          <button\n            className=\"btn btn-secondary\"\n            onClick={() => setIsEditing(true)}\n          >\n            Edit\n          </button>\n        </>\n      )}\n\n      <button\n        className=\"btn btn-danger\"\n        onClick={() => {\n          if (window.confirm(\"Are you sure you want to delete this log?\")) {\n            fetch(`http://localhost:5500/logs/${logId}`, {\n              method: \"DELETE\",\n              headers: {\n                Authorization: `Bearer ${apiKey}`,\n              },\n            })\n              .then((res) => {\n                if (!res.ok) {\n                  toast.error(\"Failed to delete log.\");\n                  return;\n                }\n                toast.success(\"Log deleted successfully.\");\n                navigate(\"/logs\");\n              })\n              .catch(() => toast.error(\"Failed to delete log.\"));\n          }\n        }}\n      >\n        Delete Log\n      </button>\n    </div>\n  );\n};\n\nexport default LogDetailsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}