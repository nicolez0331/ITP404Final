{"ast":null,"code":"var _jsxFileName = \"/Users/nicolez./Desktop/ITP404/final/src/components/DropdownWithNewItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropdownWithNewItem = ({\n  label,\n  apiEndpoint,\n  selectedId,\n  setSelectedId,\n  apiKey\n}) => {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [isNew, setIsNew] = useState(false);\n  const [newItem, setNewItem] = useState(\"\");\n  const dataFetched = useRef(false);\n  const fetchOptions = () => {\n    if (!dataFetched.current) {\n      fetch(apiEndpoint, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`\n        }\n      }).then(res => res.json()).then(data => {\n        setOptions(data);\n        dataFetched.current = true;\n      }).catch(() => {\n        toast.error(`Failed to load options from ${label} API.`);\n      });\n    }\n  };\n  const handleChange = e => {\n    const selectedValue = e.target.value;\n    if (selectedValue === \"new\") {\n      setIsNew(true);\n      setSelectedId(null);\n    } else {\n      setIsNew(false);\n      setSelectedId(selectedValue);\n    }\n  };\n  const handleAddNewItem = () => {\n    if (!newItem) {\n      toast.error(`Please enter a valid ${label.toLowerCase()}.`);\n      return;\n    }\n    fetch(apiEndpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        name: newItem\n      })\n    }).then(response => {\n      if (!response.ok) {\n        toast.error(`Failed to add new ${label.toLowerCase()}.`);\n      }\n      return response.json();\n    }).then(addedItem => {\n      const updatedOptions = options.slice();\n      updatedOptions.push(addedItem);\n      setOptions(updatedOptions);\n      setSelectedId(addedItem.id);\n      setNewItem(\"\");\n      setIsNew(false);\n      toast.success(`${label} added successfully!`);\n    }).catch(() => {\n      toast.error(`Failed to add new ${label.toLowerCase()}.`);\n    });\n  };\n  fetchOptions();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    \"data-testid\": \"dropdown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      \"data-testid\": \"dropdown-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-select\",\n      value: isNew ? \"new\" : selectedId || \"\",\n      onChange: handleChange,\n      \"data-testid\": \"dropdown-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        \"data-testid\": \"dropdown-default-option\",\n        children: `-- Select ${label} --`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.id,\n        \"data-testid\": `dropdown-option-${option.id}`,\n        children: option.name\n      }, option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"new\",\n        \"data-testid\": \"dropdown-new-option\",\n        children: [\"Other (Enter New \", label, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), isNew && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      \"data-testid\": \"new-item-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: `Enter new ${label.toLowerCase()}`,\n        value: newItem,\n        onChange: e => setNewItem(e.target.value),\n        \"data-testid\": \"new-item-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary mt-2\",\n        onClick: handleAddNewItem,\n        \"data-testid\": \"add-new-item-button\",\n        children: [\"Add New \", label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(DropdownWithNewItem, \"bOWP7Jo2I6sIFuCmpT6h26a89ew=\");\n_c = DropdownWithNewItem;\nexport default DropdownWithNewItem;\nvar _c;\n$RefreshReg$(_c, \"DropdownWithNewItem\");","map":{"version":3,"names":["React","useState","useRef","toast","jsxDEV","_jsxDEV","DropdownWithNewItem","label","apiEndpoint","selectedId","setSelectedId","apiKey","_s","options","setOptions","isNew","setIsNew","newItem","setNewItem","dataFetched","fetchOptions","current","fetch","headers","Authorization","then","res","json","data","catch","error","handleChange","e","selectedValue","target","value","handleAddNewItem","toLowerCase","method","body","JSON","stringify","name","response","ok","addedItem","updatedOptions","slice","push","id","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","option","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/nicolez./Desktop/ITP404/final/src/components/DropdownWithNewItem.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst DropdownWithNewItem = ({\n  label,\n  apiEndpoint,\n  selectedId,\n  setSelectedId,\n  apiKey,\n}) => {\n  const [options, setOptions] = useState([]);\n  const [isNew, setIsNew] = useState(false);\n  const [newItem, setNewItem] = useState(\"\");\n  const dataFetched = useRef(false);\n\n  const fetchOptions = () => {\n    if (!dataFetched.current) {\n      fetch(apiEndpoint, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setOptions(data);\n          dataFetched.current = true;\n        })\n        .catch(() => {\n          toast.error(`Failed to load options from ${label} API.`);\n        });\n    }\n  };\n\n  const handleChange = (e) => {\n    const selectedValue = e.target.value;\n    if (selectedValue === \"new\") {\n      setIsNew(true);\n      setSelectedId(null);\n    } else {\n      setIsNew(false);\n      setSelectedId(selectedValue);\n    }\n  };\n\n  const handleAddNewItem = () => {\n    if (!newItem) {\n      toast.error(`Please enter a valid ${label.toLowerCase()}.`);\n      return;\n    }\n\n    fetch(apiEndpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`,\n      },\n      body: JSON.stringify({ name: newItem }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          toast.error(`Failed to add new ${label.toLowerCase()}.`);\n        }\n        return response.json();\n      })\n      .then((addedItem) => {\n        const updatedOptions = options.slice();\n        updatedOptions.push(addedItem);\n        setOptions(updatedOptions);\n        setSelectedId(addedItem.id);\n        setNewItem(\"\");\n        setIsNew(false);\n\n        toast.success(`${label} added successfully!`);\n      })\n      .catch(() => {\n        toast.error(`Failed to add new ${label.toLowerCase()}.`);\n      });\n  };\n\n  fetchOptions();\n\n  return (\n    <div className=\"mb-3\" data-testid=\"dropdown-container\">\n      <label className=\"form-label\" data-testid=\"dropdown-label\">\n        {label}\n      </label>\n      <select\n        className=\"form-select\"\n        value={isNew ? \"new\" : selectedId || \"\"}\n        onChange={handleChange}\n        data-testid=\"dropdown-select\"\n      >\n        <option value=\"\" data-testid=\"dropdown-default-option\">\n          {`-- Select ${label} --`}\n        </option>\n        {options.map((option) => (\n          <option\n            key={option.id}\n            value={option.id}\n            data-testid={`dropdown-option-${option.id}`}\n          >\n            {option.name}\n          </option>\n        ))}\n        <option value=\"new\" data-testid=\"dropdown-new-option\">\n          Other (Enter New {label})\n        </option>\n      </select>\n\n      {isNew && (\n        <div className=\"mt-2\" data-testid=\"new-item-form\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder={`Enter new ${label.toLowerCase()}`}\n            value={newItem}\n            onChange={(e) => setNewItem(e.target.value)}\n            data-testid=\"new-item-input\"\n          />\n          <button\n            type=\"button\"\n            className=\"btn btn-primary mt-2\"\n            onClick={handleAddNewItem}\n            data-testid=\"add-new-item-button\"\n          >\n            Add New {label}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DropdownWithNewItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,mBAAmB,GAAGA,CAAC;EAC3BC,KAAK;EACLC,WAAW;EACXC,UAAU;EACVC,aAAa;EACbC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMkB,WAAW,GAAGjB,MAAM,CAAC,KAAK,CAAC;EAEjC,MAAMkB,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACD,WAAW,CAACE,OAAO,EAAE;MACxBC,KAAK,CAACd,WAAW,EAAE;QACjBe,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUb,MAAM;QACjC;MACF,CAAC,CAAC,CACCc,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;QACdd,UAAU,CAACc,IAAI,CAAC;QAChBT,WAAW,CAACE,OAAO,GAAG,IAAI;MAC5B,CAAC,CAAC,CACDQ,KAAK,CAAC,MAAM;QACX1B,KAAK,CAAC2B,KAAK,CAAC,+BAA+BvB,KAAK,OAAO,CAAC;MAC1D,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAMwB,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,aAAa,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACpC,IAAIF,aAAa,KAAK,KAAK,EAAE;MAC3BjB,QAAQ,CAAC,IAAI,CAAC;MACdN,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLM,QAAQ,CAAC,KAAK,CAAC;MACfN,aAAa,CAACuB,aAAa,CAAC;IAC9B;EACF,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACnB,OAAO,EAAE;MACZd,KAAK,CAAC2B,KAAK,CAAC,wBAAwBvB,KAAK,CAAC8B,WAAW,CAAC,CAAC,GAAG,CAAC;MAC3D;IACF;IAEAf,KAAK,CAACd,WAAW,EAAE;MACjB8B,MAAM,EAAE,MAAM;MACdf,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUb,MAAM;MACjC,CAAC;MACD4B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEzB;MAAQ,CAAC;IACxC,CAAC,CAAC,CACCQ,IAAI,CAAEkB,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChBzC,KAAK,CAAC2B,KAAK,CAAC,qBAAqBvB,KAAK,CAAC8B,WAAW,CAAC,CAAC,GAAG,CAAC;MAC1D;MACA,OAAOM,QAAQ,CAAChB,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEoB,SAAS,IAAK;MACnB,MAAMC,cAAc,GAAGjC,OAAO,CAACkC,KAAK,CAAC,CAAC;MACtCD,cAAc,CAACE,IAAI,CAACH,SAAS,CAAC;MAC9B/B,UAAU,CAACgC,cAAc,CAAC;MAC1BpC,aAAa,CAACmC,SAAS,CAACI,EAAE,CAAC;MAC3B/B,UAAU,CAAC,EAAE,CAAC;MACdF,QAAQ,CAAC,KAAK,CAAC;MAEfb,KAAK,CAAC+C,OAAO,CAAC,GAAG3C,KAAK,sBAAsB,CAAC;IAC/C,CAAC,CAAC,CACDsB,KAAK,CAAC,MAAM;MACX1B,KAAK,CAAC2B,KAAK,CAAC,qBAAqBvB,KAAK,CAAC8B,WAAW,CAAC,CAAC,GAAG,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC;EAEDjB,YAAY,CAAC,CAAC;EAEd,oBACEf,OAAA;IAAK8C,SAAS,EAAC,MAAM;IAAC,eAAY,oBAAoB;IAAAC,QAAA,gBACpD/C,OAAA;MAAO8C,SAAS,EAAC,YAAY;MAAC,eAAY,gBAAgB;MAAAC,QAAA,EACvD7C;IAAK;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACRnD,OAAA;MACE8C,SAAS,EAAC,aAAa;MACvBhB,KAAK,EAAEpB,KAAK,GAAG,KAAK,GAAGN,UAAU,IAAI,EAAG;MACxCgD,QAAQ,EAAE1B,YAAa;MACvB,eAAY,iBAAiB;MAAAqB,QAAA,gBAE7B/C,OAAA;QAAQ8B,KAAK,EAAC,EAAE;QAAC,eAAY,yBAAyB;QAAAiB,QAAA,EACnD,aAAa7C,KAAK;MAAK;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,EACR3C,OAAO,CAAC6C,GAAG,CAAEC,MAAM,iBAClBtD,OAAA;QAEE8B,KAAK,EAAEwB,MAAM,CAACV,EAAG;QACjB,eAAa,mBAAmBU,MAAM,CAACV,EAAE,EAAG;QAAAG,QAAA,EAE3CO,MAAM,CAACjB;MAAI,GAJPiB,MAAM,CAACV,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKR,CACT,CAAC,eACFnD,OAAA;QAAQ8B,KAAK,EAAC,KAAK;QAAC,eAAY,qBAAqB;QAAAiB,QAAA,GAAC,mBACnC,EAAC7C,KAAK,EAAC,GAC1B;MAAA;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAERzC,KAAK,iBACJV,OAAA;MAAK8C,SAAS,EAAC,MAAM;MAAC,eAAY,eAAe;MAAAC,QAAA,gBAC/C/C,OAAA;QACEuD,IAAI,EAAC,MAAM;QACXT,SAAS,EAAC,cAAc;QACxBU,WAAW,EAAE,aAAatD,KAAK,CAAC8B,WAAW,CAAC,CAAC,EAAG;QAChDF,KAAK,EAAElB,OAAQ;QACfwC,QAAQ,EAAGzB,CAAC,IAAKd,UAAU,CAACc,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;QAC5C,eAAY;MAAgB;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFnD,OAAA;QACEuD,IAAI,EAAC,QAAQ;QACbT,SAAS,EAAC,sBAAsB;QAChCW,OAAO,EAAE1B,gBAAiB;QAC1B,eAAY,qBAAqB;QAAAgB,QAAA,GAClC,UACS,EAAC7C,KAAK;MAAA;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5C,EAAA,CAjIIN,mBAAmB;AAAAyD,EAAA,GAAnBzD,mBAAmB;AAmIzB,eAAeA,mBAAmB;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}